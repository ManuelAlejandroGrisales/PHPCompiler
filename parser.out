Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    ANDEQUAL
    ASSIGN
    BACKSLASH
    BOOL_AND
    BOOL_OR
    CADENA
    CLOSE_TAG
    COMILLASDOBLES
    COMILLASIMPLE
    COMMENT
    COMMENT_HASHTAG
    COMMENT_MULTI
    DIVEQUAL
    DOT
    HASHTAG
    ID
    INVALID_NUMBER_SEQUENCE
    INVALID_VARIABLE
    ISIDENTICAL
    ISNOTIDENTICAL
    MINUSEQUAL
    MOD
    MULEQUAL
    NOT
    OPEN_TAG
    PLUSEQUAL
    POW
    SL
    SLEQUAL
    SR
    SREQUAL
    XOREQUAL
    abs
    abstract
    and
    array
    as
    break
    callable
    case
    catch
    ceil
    class
    clone
    const
    continue
    cos
    declare
    default
    deg2rad
    die
    do
    echo
    else
    elseif
    empty
    endclare
    endfor
    endforeach
    endif
    endswitch
    endwhile
    eval
    exit
    exp
    extends
    final
    finally
    floor
    for
    foreach
    function
    global
    goto
    if
    implements
    include
    include_once
    instanceof
    insteadof
    interface
    isset
    list
    log
    log10
    match
    max
    min
    namespace
    new
    objectoperator
    or
    php
    pow
    print
    private
    protected
    public
    rad2deg
    rand
    readonly
    require
    require_once
    return
    round
    sin
    sqrt
    static
    switch
    throw
    trait
    try
    unset
    use
    var
    while
    xor

Grammar

Rule 0     S' -> program
Rule 1     program -> header header_declaration declaration_list footer_declaration
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> selection_stmt
Rule 6     declaration -> iteration_stmt
Rule 7     declaration -> fun_declaration
Rule 8     declaration -> show_in_screen
Rule 9     declaration -> expression_stmt
Rule 10    header -> LESS QUESTIONMARK PHP
Rule 11    header_declaration -> INCLUDE SEMICOLON
Rule 12    header_declaration -> empty_function
Rule 13    footer_declaration -> QUESTIONMARK GREATER
Rule 14    show_in_screen -> ECHO var_val SEMICOLON
Rule 15    show_in_screen -> ECHO CADENA1 SEMICOLON
Rule 16    show_in_screen -> ECHO selection_stmt
Rule 17    var_declaration -> var_declaration2 SEMICOLON
Rule 18    var_declaration -> VARIABLE LBRACKET NUMBER RBRACKET SEMICOLON
Rule 19    var_declaration2 -> VARIABLE
Rule 20    var_declaration2 -> VARIABLE COMMA var_declaration2
Rule 21    var_declaration2 -> VARIABLE EQUAL NUMBER COMMA var_declaration2
Rule 22    var_declaration2 -> VARIABLE EQUAL NUMBER
Rule 23    var_declaration2 -> VARIABLE EQUAL VARIABLE COMMA var_declaration2
Rule 24    var_declaration2 -> VARIABLE EQUAL VARIABLE
Rule 25    var_declaration2 -> COMMA
Rule 26    var_declaration2 -> VARIABLE EQUAL VARIABLE simple_expression
Rule 27    var_declaration2 -> VARIABLE EQUAL LBRACKET NUMBER COMMA var_declaration2
Rule 28    var_declaration2 -> NUMBER COMMA var_declaration2
Rule 29    var_declaration2 -> NUMBER RBRACKET
Rule 30    var_declaration2 -> VARIABLE EQUAL LBRACKET CADENA1 COMMA var_declaration2
Rule 31    var_declaration2 -> CADENA1 COMMA var_declaration2
Rule 32    var_declaration2 -> CADENA1 RBRACKET
Rule 33    fun_declaration -> FUNCTION VARIABLE2 LPAREN params RPAREN statement
Rule 34    params -> param_list
Rule 35    param_list -> param_list COMMA param
Rule 36    param_list -> param
Rule 37    param -> VARIABLE
Rule 38    param -> VARIABLE LBRACKET RBRACKET
Rule 39    param -> empty_function
Rule 40    compount_stmt -> LBLOCK local_declarations statement_list RBLOCK
Rule 41    local_declarations -> var_declaration
Rule 42    local_declarations -> empty_function
Rule 43    statement_list -> statement_list statement
Rule 44    statement_list -> statement
Rule 45    statement_list -> empty_function
Rule 46    statement -> expression_stmt
Rule 47    statement -> compount_stmt
Rule 48    statement -> selection_stmt
Rule 49    statement -> iteration_stmt
Rule 50    statement -> show_in_screen
Rule 51    statement -> return_stmt
Rule 52    expression_stmt -> expression SEMICOLON
Rule 53    expression_stmt -> SEMICOLON
Rule 54    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 55    selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement
Rule 56    selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement
Rule 57    selection_stmt -> SWITCH LPAREN var_val RPAREN statement
Rule 58    selection_stmt -> CASE NUMBER COLON statement BREAK SEMICOLON
Rule 59    selection_stmt -> DEFAULT COLON statement BREAK SEMICOLON
Rule 60    selection_stmt -> VARIABLE relop VARIABLE QUESTIONMARK expression COLON expression SEMICOLON
Rule 61    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 62    iteration_stmt -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement
Rule 63    iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement
Rule 64    return_stmt -> RETURN SEMICOLON
Rule 65    return_stmt -> RETURN expression SEMICOLON
Rule 66    expression -> var_val EQUAL expression
Rule 67    expression -> simple_expression
Rule 68    var_val -> VARIABLE
Rule 69    var_val -> VARIABLE LBRACKET expression RBRACKET
Rule 70    simple_expression -> additive_expression relop additive_expression
Rule 71    simple_expression -> additive_expression
Rule 72    relop -> LESS
Rule 73    relop -> LESSEQUAL
Rule 74    relop -> GREATER
Rule 75    relop -> GREATEREQUAL
Rule 76    relop -> DEQUAL
Rule 77    relop -> DISTINT
Rule 78    relop -> ISEQUAL
Rule 79    additive_expression -> additive_expression addop term
Rule 80    additive_expression -> term
Rule 81    additive_expression -> term MINUSMINUS
Rule 82    additive_expression -> term PLUSPLUS
Rule 83    additive_expression -> addop term
Rule 84    addop -> PLUS
Rule 85    addop -> MINUS
Rule 86    term -> term mulop factor
Rule 87    term -> factor
Rule 88    term -> CADENA1
Rule 89    term -> CADENA2
Rule 90    mulop -> TIMES
Rule 91    mulop -> DIVIDE
Rule 92    factor -> LPAREN expression RPAREN
Rule 93    factor -> var_val
Rule 94    factor -> call
Rule 95    factor -> NUMBER
Rule 96    call -> VARIABLE2 LPAREN args RPAREN
Rule 97    args -> args_list
Rule 98    args -> empty_function
Rule 99    args_list -> args_list COMMA expression
Rule 100   args_list -> expression
Rule 101   empty_function -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
ANDEQUAL             : 
ASSIGN               : 
BACKSLASH            : 
BOOL_AND             : 
BOOL_OR              : 
CADENA               : 
CLOSE_TAG            : 
COLON                : 58 59 60
COMILLASDOBLES       : 
COMILLASIMPLE        : 
COMMA                : 20 21 23 25 27 28 30 31 35 99
COMMENT              : 
COMMENT_HASHTAG      : 
COMMENT_MULTI        : 
DEQUAL               : 76
DISTINT              : 77
DIVEQUAL             : 
DIVIDE               : 91
DOT                  : 
EQUAL                : 21 22 23 24 26 27 30 66
GREATER              : 13 74
GREATEREQUAL         : 75
HASHTAG              : 
ID                   : 
INVALID_NUMBER_SEQUENCE : 
INVALID_VARIABLE     : 
ISEQUAL              : 78
ISIDENTICAL          : 
ISNOTIDENTICAL       : 
LBLOCK               : 40
LBRACKET             : 18 27 30 38 69
LESS                 : 10 72
LESSEQUAL            : 73
LPAREN               : 33 54 55 56 57 61 62 63 92 96
MINUS                : 85
MINUSEQUAL           : 
MINUSMINUS           : 81
MOD                  : 
MULEQUAL             : 
NOT                  : 
NUMBER               : 18 21 22 27 28 29 58 95
OPEN_TAG             : 
PLUS                 : 84
PLUSEQUAL            : 
PLUSPLUS             : 82
POW                  : 
QUESTIONMARK         : 10 13 60
RBLOCK               : 40
RBRACKET             : 18 29 32 38 69
RPAREN               : 33 54 55 56 57 61 62 63 92 96
SEMICOLON            : 11 14 15 17 18 52 53 58 59 60 62 62 64 65
SL                   : 
SLEQUAL              : 
SR                   : 
SREQUAL              : 
TIMES                : 90
VARIABLE             : 18 19 20 21 22 23 23 24 24 26 26 27 30 37 38 60 60 68 69
XOREQUAL             : 
abs                  : 
abstract             : 
and                  : 
array                : 
as                   : 
break                : 
callable             : 
case                 : 
catch                : 
ceil                 : 
class                : 
clone                : 
const                : 
continue             : 
cos                  : 
declare              : 
default              : 
deg2rad              : 
die                  : 
do                   : 
echo                 : 
else                 : 
elseif               : 
empty                : 
endclare             : 
endfor               : 
endforeach           : 
endif                : 
endswitch            : 
endwhile             : 
error                : 
eval                 : 
exit                 : 
exp                  : 
extends              : 
final                : 
finally              : 
floor                : 
for                  : 
foreach              : 
function             : 
global               : 
goto                 : 
if                   : 
implements           : 
include              : 
include_once         : 
instanceof           : 
insteadof            : 
interface            : 
isset                : 
list                 : 
log                  : 
log10                : 
match                : 
max                  : 
min                  : 
namespace            : 
new                  : 
objectoperator       : 
or                   : 
php                  : 
pow                  : 
print                : 
private              : 
protected            : 
public               : 
rad2deg              : 
rand                 : 
readonly             : 
require              : 
require_once         : 
return               : 
round                : 
sin                  : 
sqrt                 : 
static               : 
switch               : 
throw                : 
trait                : 
try                  : 
unset                : 
use                  : 
var                  : 
while                : 
xor                  : 

Nonterminals, with rules where they appear

AS                   : 63
BREAK                : 58 59
CADENA1              : 15 30 31 32 88
CADENA2              : 89
CASE                 : 58
DEFAULT              : 59
ECHO                 : 14 15 16
ELSE                 : 55
ELSEIF               : 56
FOR                  : 62
FOREACH              : 63
FUNCTION             : 33
IF                   : 54 55 56
INCLUDE              : 11
PHP                  : 10
RETURN               : 64 65
SWITCH               : 57
VARIABLE2            : 33 96
WHILE                : 61
additive_expression  : 62 70 70 71 79
addop                : 79 83
args                 : 96
args_list            : 97 99
call                 : 94
compount_stmt        : 47
declaration          : 2 3
declaration_list     : 1 2
empty_function       : 12 39 42 45 98
expression           : 52 54 55 56 60 60 61 62 65 66 69 92 99 100
expression_stmt      : 9 46
factor               : 86 87
footer_declaration   : 1
fun_declaration      : 7
header               : 1
header_declaration   : 1
iteration_stmt       : 6 49
local_declarations   : 40
mulop                : 86
param                : 35 36
param_list           : 34 35
params               : 33
program              : 0
relop                : 60 70
return_stmt          : 51
selection_stmt       : 5 16 48
show_in_screen       : 8 50
simple_expression    : 26 67
statement            : 33 43 44 54 55 55 56 56 57 58 59 61 62 63
statement_list       : 40 43
term                 : 79 80 81 82 83 86
var_declaration      : 4 41
var_declaration2     : 17 20 21 23 27 28 30 31 62
var_val              : 14 57 63 63 66 93

